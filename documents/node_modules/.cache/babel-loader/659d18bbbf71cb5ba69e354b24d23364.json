{"ast":null,"code":"import _createForOfIteratorHelper from\"C:\\\\Users\\\\satoshi_iwasaki\\\\prj\\\\appl\\\\docs.Example\\\\docs\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createForOfIteratorHelper\";import _objectSpread from\"C:\\\\Users\\\\satoshi_iwasaki\\\\prj\\\\appl\\\\docs.Example\\\\docs\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";import{SELECTED_MENU}from'../actions/global_menu.js';var selectedMenu=function selectedMenu(state,action){var new_state=_objectSpread({},state);var _iterator=_createForOfIteratorHelper(new_state.menus),_step;try{for(_iterator.s();!(_step=_iterator.n()).done;){var m=_step.value;m.select=m.code===action.menu.code;}}catch(err){_iterator.e(err);}finally{_iterator.f();}return new_state;};var global_menu=function global_menu(){var state=arguments.length>0&&arguments[0]!==undefined?arguments[0]:[];var action=arguments.length>1?arguments[1]:undefined;switch(action.type){case SELECTED_MENU:return selectedMenu(state,action);default:return state;}};export default global_menu;","map":{"version":3,"sources":["C:/Users/satoshi_iwasaki/prj/appl/docs.Example/docs/src/reducers/global_menu.js"],"names":["SELECTED_MENU","selectedMenu","state","action","new_state","menus","m","select","code","menu","global_menu","type"],"mappings":"iYAAA,OAASA,aAAT,KAA8B,2BAA9B,CAEA,GAAMC,CAAAA,YAAY,CAAG,QAAfA,CAAAA,YAAe,CAACC,KAAD,CAAQC,MAAR,CAAmB,CACpC,GAAIC,CAAAA,SAAS,kBAAOF,KAAP,CAAb,CADoC,yCAGtBE,SAAS,CAACC,KAHY,YAGpC,mDAASC,CAAAA,CAAT,aACIA,CAAC,CAACC,MAAF,CAAYD,CAAC,CAACE,IAAF,GAASL,MAAM,CAACM,IAAP,CAAYD,IAAjC,CADJ,CAHoC,qDAMpC,MAAOJ,CAAAA,SAAP,CACH,CAPD,CASA,GAAMM,CAAAA,WAAW,CAAG,QAAdA,CAAAA,WAAc,EAAwB,IAAvBR,CAAAA,KAAuB,2DAAf,EAAe,IAAXC,CAAAA,MAAW,2CACxC,OAAQA,MAAM,CAACQ,IAAf,EAEA,IAAKX,CAAAA,aAAL,CACI,MAAOC,CAAAA,YAAY,CAACC,KAAD,CAAQC,MAAR,CAAnB,CAEJ,QACI,MAAOD,CAAAA,KAAP,CANJ,CAQH,CATD,CAWA,cAAeQ,CAAAA,WAAf","sourcesContent":["import { SELECTED_MENU } from '../actions/global_menu.js';\r\n\r\nconst selectedMenu = (state, action) => {\r\n    let new_state = {...state};\r\n\r\n    for (let m of new_state.menus)\r\n        m.select = (m.code===action.menu.code);\r\n\r\n    return new_state;\r\n};\r\n\r\nconst global_menu = (state = [], action) => {\r\n    switch (action.type) {\r\n\r\n    case SELECTED_MENU:\r\n        return selectedMenu(state, action);\r\n\r\n    default:\r\n        return state;\r\n    }\r\n};\r\n\r\nexport default global_menu;\r\n"]},"metadata":{},"sourceType":"module"}